apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-topic-muziris-template2
  title: 'Kafka: Create Kafka Topic in Confluent Cloud'
  annotations:
    mnscorp.net/tutorial-url: 'https://confluence.marksandspencer.app/display/CGE/Topic+creation'
  description: 'Step-2: To create a Topic in Confluent Cloud, use this template.'
  tags:
    - kafka
    - confluent
    - confluentcloud
    - topic
spec:
  owner: integration-frameworks
  type: service
  parameters:
    - title: Self service template for Resource Group Access
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          pattern: ^[a-z,0-9]{1,8}$
          ui:autofocus: true
          ui:options:
            rows: 5
        team:
          type: string
          description: Unique name of the component
          pattern: ^[a-z,0-9]{1,8}$
          ui:autofocus: true
          ui:options:
            rows: 5
        user:
          title:  user
          type: string
          ui:field: signed-in-user    
        subscription:
          title: Awesome Merger 
          description: Custom Extension support consumers to merge the fields and string with custom delimiter, custom regex validaion etc. 
          type: string
          ui:options:
            # form: ["IT APP", "${{ parameters.name}}"]
            form: ["IT APP-", "${{ parameters.name}}","_", "${{ parameters.name}}", "*", "${{parameters.team.user}}"]
            delimiter: "$$$"
            regexExp: "^IT APP-"
            disable: false
            validate: true

 
  steps:
    - id: fetchBase
      name: Fetch Base
      action: 'fetch:template'
      input:
        url: ./template
        values:
          name: '${{parameters.application_name}}'
          destination: >- test
        gitAuthorName: '${{ user.entity.metadata.name }}'
        gitAuthorEmail: '${{ user.entity.spec.profile.email }}'
  output:
    links:
      - title: Follow link to Github repo and Pull request for next steps
        url: '${{steps.publish.output.remoteUrl}}'
