# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install http (HTTPie)
        run: |
          sudo apt-get update
          sudo apt-get install -y httpie
          http --version

      - name: Install Confluent Cloud CLI
        run: |
          sudo curl -sL --http1.1 https://cnfl.io/cli | sh -s -- latest
          pwd
          ls -latr ./bin
          echo $PATH
          export PATH=$PATH:`pwd`/bin
          echo $PATH

      - name: Verify Installations
        run: |
          echo $PATH
          export PATH=$PATH:`pwd`/bin
          http --version
          confluent version
          # http 'https://api.telemetry.confluent.cloud/v2/metrics/cloud/query' --auth ${{ secrets.CC_KEY_FINOPS }} < received_bytes_query.json | jq -r  '.data[] |  [.timestamp , .value] | @csv'
          http 'https://api.telemetry.confluent.cloud/v2/metrics/cloud/query' --auth ${{ secrets.CC_KEY_FINOPS }} < received_bytes_query.json | jq -r  '.data[] |  [.timestamp , ."metric.topic" ,  .value] | @csv'
  
      - name: Log in to Confluent Cloud
        run: |
          confluent login --save

        env:
          CCLOUD_EMAIL: ${{ secrets.CCLOUD_API_KEY }}
          CCLOUD_PASSWORD: ${{ secrets.CCLOUD_API_SECRET }}        
          
